services:
  reservations:
    depends_on:
      - mongodb_airbnb_nest
      - auth
    build: 
      context: .
      dockerfile: ./apps/reservations/Dockerfile
      target: development
    command: pnpm run start:dev reservations
    ports:
      - '3000:3000'
      - '9229:9229'
    volumes:
      - .:/usr/src/app
    env_file:
      - ./apps/reservations/.env
  auth:
    depends_on:
    - mongodb_airbnb_nest
    build: 
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: pnpm run start:debug auth
    ports:
      - '3001:3001'
    volumes:
      - .:/usr/src/app
    env_file:
      - ./apps/auth/.env
  payments:
    depends_on:
      - notifications
    build: 
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: development
    command: pnpm run start:dev payments
    volumes:
      - .:/usr/src/app
    env_file:
      - ./apps/payments/.env
  notifications:
    build: 
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    command: pnpm run start:dev notifications
    volumes:
      - .:/usr/src/app
    env_file:
      - ./apps/notifications/.env
  mongodb_airbnb_nest:
    container_name: mongodb_airbnb_nest # this is the DNS name => so you need to connect to "mongodb://mongodb:27017" from within your application
    restart: always
    env_file:
      - .env
    image: mongo:6-jammy
    ports:
      - '27017:27017'
    volumes:
      - data-volume:/data/db # mount the volume, so the data is not lost
volumes:
  data-volume: # in this volume all the data will be saved when you stop/ delete the MongoDB container